local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Remove old
if playerGui:FindFirstChild("TradeFreezerGUI") then
	playerGui.TradeFreezerGUI:Destroy()
end

-- Helper for creating UI elements
local function new(class, props)
	local obj = Instance.new(class)
	for k, v in pairs(props) do
		obj[k] = v
	end
	return obj
end

-- GUI Container
local gui = new("ScreenGui", {Name = "TradeFreezerGUI", ResetOnSpawn = false, Parent = playerGui})

-- Main Frame
local main = new("Frame", {
	Parent = gui,
	AnchorPoint = Vector2.new(0.5, 0.5),
	Position = UDim2.new(0.5, 0, 0.5, 0),
	Size = UDim2.new(0, 260, 0, 150),
	BackgroundColor3 = Color3.fromRGB(20, 20, 20),
	BorderSizePixel = 0
})
new("UICorner", {Parent = main, CornerRadius = UDim.new(0, 12)})

-- Title Bar
local titleBar = new("Frame", {
	Parent = main,
	Size = UDim2.new(1, 0, 0, 30),
	BackgroundColor3 = Color3.fromRGB(30, 30, 30),
	BorderSizePixel = 0
})
new("UICorner", {Parent = titleBar, CornerRadius = UDim.new(0, 12)})

new("TextLabel", {
	Parent = titleBar,
	Size = UDim2.new(1, 0, 1, 0),
	BackgroundTransparency = 1,
	Text = "Trade Freezer",
	Font = Enum.Font.GothamBold,
	TextSize = 18,
	TextColor3 = Color3.fromRGB(255, 255, 255)
})

-- Button on the left
local leftButton = new("TextButton", {
	Parent = main,
	Position = UDim2.new(0, 10, 0, 50),
	Size = UDim2.new(0, 100, 0, 40),
	Text = "Generate",
	Font = Enum.Font.Gotham,
	TextSize = 16,
	TextColor3 = Color3.fromRGB(255, 255, 255),
	BackgroundColor3 = Color3.fromRGB(60, 60, 60),
	BorderSizePixel = 0
})
new("UICorner", {Parent = leftButton, CornerRadius = UDim.new(0, 8)})

-- White highlight effect (thin)
local highlight = new("Frame", {
	Parent = leftButton,
	Size = UDim2.new(1, 0, 1, 0),
	BackgroundColor3 = Color3.fromRGB(255, 255, 255),
	BackgroundTransparency = 0.8,
	Visible = false
})
new("UICorner", {Parent = highlight, CornerRadius = UDim.new(0, 8)})

leftButton.MouseButton1Click:Connect(function()
	highlight.Visible = true
	task.wait(0.15)
	highlight.Visible = false
end)

-- Draggable code (only from title bar)
local UIS = game:GetService("UserInputService")
local dragging, dragInput, dragStart, startPos

local function updateDrag(input)
	local delta = input.Position - dragStart
	main.Position = UDim2.new(
		startPos.X.Scale, startPos.X.Offset + delta.X,
		startPos.Y.Scale, startPos.Y.Offset + delta.Y
	)
end

titleBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = main.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

titleBar.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UIS.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		updateDrag(input)
	end
end)
